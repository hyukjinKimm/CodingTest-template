백준 
11724
17136
1166

이코테 
  그리디 
    1이 될때가지
  문제
    곱하기 혹은 더하기
    볼링공 고르기
    무지의 먹방 라이브
      최소 값 이라는 키워드가 나왔는데 최소힙 생각 못함.
      마지막에 sort 해주는 아이디어.
      테스트 케이스가 맘대로 설정되어있나 확인...
    문자열 압축
      내가 푼것에 자신감이 없다..


      정석 풀이의 팁:
        1. 문자열 길이의 절반까지만 확인해도 됨.
    뱀 
      사과를 먹고 1로 바꿔주지 않음
      풀이를 외워서 푼 느낌이 강함.
      시간복잡도 계산을 못하겠음.

      정석풀이의 팁:
        nx, ny 의 위치를 in snake 로 확인하는게 아닌 뱀이 존재할때 board 값을 2로 바꿈으로서 더욱 빠르게 탐색이 가능.

    기둥과 보 설치 
      풀이를 외워서 푼 느낌이 강함.
      possible 함수 안에서 안에서 특정 구조물이 가능 한경우에 return 하는 실수를 해버려서 다음 구조물을 확인하지 못하는 오류를 범함
      시간복잡도 계산을 못하겠음.
      x, y 좌표가 거꾸로 되있어서 헷갈렸음.

      좌표 탐색 시 list 대신의 set 을 사용하자.
    
    외벽점검 (1시간걸림)
     weak[now] 가 sumVal 보다 작을경우 sumVal 을 초기화 해주는 과정에서 += 기호를 써서 틀림.
     permutations 이 아닌 combination 을 사용하는 바보같은 실수를 해서 시간을 낭비함.
     각 weak 시작점을 기준으로 각 친구를 순열처리 하는 과정을 쉽게 생각하지 못함.
     cnt 가 인덱스라 +1 을 해준 값을 리턴해야하는데 이 과정에서 10분 낭비.
     데이터의 갯수가 적다 -> 완전탐색을 의심해야함



  dfs, bfs 
    경쟁적 전염 
      내가 했던 실수: while 문이 sec 초에 도달하기 전에 끝날 경우를 고려하지 않아서 10분의 시간을 허비.

  연산자 끼워넣기 
    문제는 맞았지만 dfs 로 코딩하지 못함.
    dfs는 for 문을 사용하지 않을수도 있음.
  감시 피하기 
    복사본 board 를 만들고 위아래옆으로 체크하는 과정에서 복사본 board 가 아닌
    원본 배열을 확인하고 있어서 10분을 낭비함.
  인구이동 
    abs 함수안에 R 값을 집어넣는 오타를 범함. ( 15분 낭비)
    각 나라를 이중 포문으로 순회 하면서 국경을 열어야  하는 나라를 발견하면 while 문으로 dfs 를 시작
    while 에 해당하는 else 에서 각 나라별 인구수를 개편해줘야하는데 그러지 않고 메인 while 문이 끝낼때 한번만 해주는 실수를
    범함(10분낭비)

  블록 이동하기 
    set() 자료형은 {} 이렇게 생겼는데 자바스크립트의 dictionary 이름과 같아서 헷갈렸다.

  정렬 
    실패율 
      실패율을 정의하는 과정에서  32 번 째 코드 실행전에 34번 코드를 실행해서 
      이미 바뀐 p[i] 값이 rest 에서 빠지는 오류가 발생.

      